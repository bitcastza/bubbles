stages:
  - test
  - deploy

sast:
  stage: test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/sast:$SP_VERSION" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]

unit-3:
  stage: test
  script:
    - apt-get update -qq && apt-get install -y -qq python3 python3-pip
    - pip3 install -r requirements.txt
    - python3 --version
    - python3 -m django --version
    - python3 ./manage.py test --parallel 5

staging:
  stage: deploy
  script:
    - apt-get update && apt-get install -y -qq ansible git
    - ./scripts/deploy.sh
  environment:
    name: staging
    url: https://bubbles.paddatrapper.com
  only:
    - master

docker-image:
  stage: deploy
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - echo $CI_REGISTRY
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:dev || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:dev --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:dev .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:dev
  only:
    - master
